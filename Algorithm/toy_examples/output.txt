   Gender   M   GPA   IH
0       M  CS  3.75  125
1       F  AM  3.80  150
2       F  IS  3.50  125
3       M  AM  3.90   90
4       F  CS  3.80  120
5       F  CS  3.80   80
6       M  IS  3.50  125
7       M  CS  3.50   95
8       M  CS  3.80  130
9       F  IS  3.75  140
10      M  CS  3.85  115
11      F  CS  3.65  125
selected_attributes ['M', 'GPA', 'IH']
after apply:
      M   GPA   IH  ... protected_greater_than  protected_smaller_than  satisfy
1   AM 3.800  150  ...                      1                       0        0
2   IS 3.500  125  ...                      1                       0        0
3   AM 3.900   90  ...                      0                       0        0
5   CS 3.800   80  ...                      1                       0        0
6   IS 3.500  125  ...                      0                       0        0
7   CS 3.500   95  ...                      0                       0        0
9   IS 3.750  140  ...                      1                       0        0
11  CS 3.650  125  ...                      1                       0        0

[8 rows x 7 columns]
protected_greater_than:
      M   GPA   IH  ... protected_greater_than  protected_smaller_than  satisfy
1   AM 3.800  150  ...                      1                       0        0
2   IS 3.500  125  ...                      1                       0        0
5   CS 3.800   80  ...                      1                       0        0
9   IS 3.750  140  ...                      1                       0        0
11  CS 3.650  125  ...                      1                       0        0

[5 rows x 7 columns]
provenance_expressions [{'symbol': '>=', 'number': 2, 'provenance_expression': [{'M': 'AM', 'GPA': 3.8, 'IH': 150}, {'M': 'IS', 'GPA': 3.5, 'IH': 125}, {'M': 'CS', 'GPA': 3.8, 'IH': 80}, {'M': 'IS', 'GPA': 3.75, 'IH': 140}, {'M': 'CS', 'GPA': 3.65, 'IH': 125}]}] []
data_rows_greater_than:
      M   GPA   IH  ... protected_greater_than  protected_smaller_than  satisfy
1   AM 3.800  150  ...                      1                       0        0
2   IS 3.500  125  ...                      1                       0        0
5   CS 3.800   80  ...                      1                       0        0
9   IS 3.750  140  ...                      1                       0        0
11  CS 3.650  125  ...                      1                       0        0

[5 rows x 7 columns]
delta_table:
     GPA  IH  M_IS  M_AM
0 0.000   0   100     1
1 0.200   0     1   100
2 0.000  20     0     0
3 0.000   0     1   100
4 0.050   0     0     0
sorted_table:
    GPA  IH  M_IS  M_AM
0    0   0     2     2
1    2   3     4     4
2    3   4     3     0
3    4   1     1     3
4    1   2     0     1
delta_table:
     GPA  IH  M_IS  M_AM
0 0.000   0 0.500 1.000
1 0.200   0 1.000 0.500
2 0.000  20 0.000 0.000
3 0.000   0 1.000 0.500
4 0.050   0 0.000 0.000
check [0]
check [2]
check [2, 0]
satisfies fairness constraints

check [3]
check [3, 0]
satisfies fairness constraints

check [4]
check [4, 2]
satisfies fairness constraints

check [4, 0]
satisfies fairness constraints

check [4, 3]
satisfies fairness constraints

check [3, 2]
satisfies fairness constraints

check [1]
satisfies fairness constraints

check [1, 0]
satisfies fairness constraints

check [1, 3]
satisfies fairness constraints

check [1, 4]
satisfies fairness constraints

check [1, 2]
satisfies fairness constraints

minimal_added_relaxations:[GPA     0.000
IH     20.000
M_IS    0.500
M_AM    1.000
dtype: float64, GPA    0.000
IH     0.000
M_IS   1.000
M_AM   1.000
dtype: float64, GPA     0.050
IH     20.000
M_IS    0.000
M_AM    0.000
dtype: float64, GPA    0.050
IH     0.000
M_IS   0.500
M_AM   1.000
dtype: float64, GPA    0.050
IH     0.000
M_IS   1.000
M_AM   0.500
dtype: float64, GPA     0.000
IH     20.000
M_IS    1.000
M_AM    0.500
dtype: float64]
{'numeric': {'GPA': ['>=', 3.7], 'IH': ['>=', 80.0]}, 'categorical': {'M': ['CS', 'AM']}}
{'numeric': {'GPA': ['>=', 3.7], 'IH': ['>=', 100.0]}, 'categorical': {'M': ['CS', 'IS', 'AM']}}
{'numeric': {'GPA': ['>=', 3.65], 'IH': ['>=', 80.0]}, 'categorical': {'M': ['CS']}}
{'numeric': {'GPA': ['>=', 3.65], 'IH': ['>=', 100.0]}, 'categorical': {'M': ['CS', 'AM']}}
{'numeric': {'GPA': ['>=', 3.65], 'IH': ['>=', 100.0]}, 'categorical': {'M': ['CS', 'IS']}}
{'numeric': {'GPA': ['>=', 3.7], 'IH': ['>=', 80.0]}, 'categorical': {'M': ['CS', 'IS']}}
